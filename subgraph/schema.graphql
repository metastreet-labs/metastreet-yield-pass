type YieldPassMarket @entity {
  id: Bytes! # address (yield pass token)
  yieldPassToken: ERC20!
  nodePassToken: ERC721!
  nodeToken: ERC721!
  startTime: BigInt! # uint64
  expiryTime: BigInt! # uint64
  adapter: YieldAdapter!
  pair: UniswapV2Pair

  # Statistics
  nodesDeposited: Int!
  nodesWithdrawn: Int!
  yieldShares: BigInt! # uint256
  yieldCumulative: BigInt! # uint256
  yieldClaimable: BigInt! # uint256
  yieldClaimed: BigInt! # uint256
  lastHarvestedEvent: YieldPassEvent
}

type YieldAdapter @entity {
  id: Bytes! # address
  name: String!
  yieldToken: ERC20!
  yieldPassMarket: YieldPassMarket!
}

type ERC20 @entity(immutable: true) {
  id: Bytes! # address
  name: String!
  symbol: String!
  decimals: Int!
}

type ERC721 @entity(immutable: true) {
  id: Bytes! # address
  name: String!
  symbol: String!
}

type UniswapV2Pair @entity(immutable: true) {
  id: Bytes! # pair address
  yieldPassMarket: YieldPassMarket!
  token0: Bytes! # address
  token1: Bytes! # address
}

type YieldPassEvent @entity(immutable: true) {
  id: Bytes! # <pool><tx hash><log index>
  transactionHash: Bytes!
  timestamp: BigInt! # uint64
  from: Bytes! # address
  type: YieldPassEventType!
  yieldPassMarket: YieldPassMarket!

  minted: MintedEvent
  harvested: HarvestedEvent
  claimed: ClaimedEvent
  redeemed: RedeemedEvent
  withdrawn: WithdrawnEvent
}

enum YieldPassEventType {
  Minted
  Harvested
  Claimed
  Redeemed
  Withdrawn
}

type MintedEvent @entity(immutable: true) {
  id: Bytes! # <pool><tx hash><log index>
  account: Bytes! # address
  yieldPassRecipient: Bytes! # address
  nodePassRecipient: Bytes! # address
  yieldPassAmount: BigInt! # uint256
  nodeToken: Bytes! # address
  nodeTokenIds: [BigInt!]! # uint256[]
  operators: [Bytes!]! # address[]
}

type HarvestedEvent @entity(immutable: true) {
  id: Bytes! # <pool><tx hash><log index>
  yieldAmount: BigInt! # uint256
}

type ClaimedEvent @entity(immutable: true) {
  id: Bytes! # <pool><tx hash><log index>
  account: Bytes! # address
  recipient: Bytes! # address
  yieldPassAmount: BigInt! # uint256
  yieldToken: Bytes! # address
  yieldAmount: BigInt! # uint256
}

type RedeemedEvent @entity(immutable: true) {
  id: Bytes! # <pool><tx hash><log index>
  account: Bytes! # address
  recipient: Bytes! # address
  nodeToken: Bytes! # address
  nodeTokenIds: [BigInt!]! # uint256[]
}

type WithdrawnEvent @entity(immutable: true) {
  id: Bytes! # <pool><tx hash><log index>
  account: Bytes! # address
  recipient: Bytes! # address
  nodeToken: Bytes! # address
  nodeTokenIds: [BigInt!]! # uint256[]
}

type NodePassTokenOwnership @entity {
  id: Bytes! # <node pass token><token id>
  tokenId: BigInt! # uint256
  owner: Bytes! # address
  nodePassToken: ERC721!
}
